name: Release Build

on:
  push:
    tags:
      - 'v*'
      - 'pre-*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          BUILD_TIME=$(date "+%F %T")
          GIT_COMMIT=$(git rev-parse HEAD)
          VERSION=${GITHUB_REF#refs/tags/}
          
          OUTPUT="ipaas-agent-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="${OUTPUT}.exe"
          fi
          
          go build -ldflags "-X main.BuildTime=${BUILD_TIME} -X main.GitCommit=${GIT_COMMIT} -X main.Version=${VERSION}" -o ${OUTPUT}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ipaas-agent-*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binaries

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ipaas-agent-*
          prerelease: ${{ contains(github.ref, 'pre-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}